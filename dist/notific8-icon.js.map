{"version":3,"sources":["../src/js/notific8-icon.js"],"names":[],"mappings":";;AAAA;;;;;;;AAOA,CAAC,UAAS,MAAT,EAAiB;AAChB,MAAI,YAAJ;AAAA,MACE,SADF;AAAA,MAEE,OAFF;AAAA,MAGE,YAHF;AAAA,MAIE,eAAe,IAJjB;;AAMA;;;;AAIA,YAAU,mBAAW;AACnB,WAAQ,aAAa,QAAb,CAAsB,IAAtB,KAA+B,IAAhC,IAA0C,OAAO,aAAa,QAAb,CAAsB,IAA7B,KAAsC,QAAvF;AACD,GAFD;;AAIA;;;;AAIA,cAAY,qBAAW;AACrB,QAAI,OAAJ;AACA,QAAI,SAAJ,EAAe;AACb,gBAAU,CACL,aAAa,QAAb,CAAsB,SADjB,YAEL,aAAa,QAAb,CAAsB,SAFjB,mBAEwC,aAAa,QAAb,CAAsB,IAF9D,CAAV;AAIA,4BAAoB,QAAQ,IAAR,CAAa,GAAb,CAApB;AACD;;AAED,WAAO,EAAP;AACD,GAXD;;AAaA;;;;AAIA,iBAAe,wBAAW;AACxB,QAAI,SAAJ,EAAe;AACb,aAAO,CAAC,UAAD,CAAP;AACD;;AAED,WAAO,EAAP;AACD,GAND;;AAQA;;;;AAIA,iBAAe,sBAAS,IAAT,EAAe;AAC5B,mBAAe,IAAf;AACA,WAAO;AACL,eAAS,cADJ;AAEL,YAAM;AAFD,KAAP;AAID,GAND;;AAQA,SAAO,OAAO,QAAP,CAAgB,gBAAhB,EAAkC,MAAlC,EAA0C,eAA1C,EAA2D;AAChE,UAAM;AAD0D,GAA3D,EAEJ,YAFI,CAAP;AAGD,CA3DD,EA2DG,MA3DH","file":"notific8-icon.js","sourcesContent":["/**\n * @author Will Steinmetz\n * Icon module for the notific8 notification plug-in\n * Copyright (c)2013-2016, Will Steinmetz\n * Licensed under the BSD license.\n * http://opensource.org/licenses/BSD-3-Clause\n */\n(function(window) {\n  var buildClasses,\n    buildHtml,\n    hasIcon,\n    iconCallback,\n    notific8Data = null;\n\n  /**\n   * Check whether or not a valid icon is set for this notification\n   * @return boolean\n   */\n  hasIcon = function() {\n    return (notific8Data.settings.icon !== null) && (typeof notific8Data.settings.icon === 'string');\n  };\n\n  /**\n   * Build the HTML for the icon\n   * @return string\n   */\n  buildHtml = function() {\n    var classes;\n    if (hasIcon()) {\n      classes = [\n        `${notific8Data.settings.namespace}-icon`,\n        `${notific8Data.settings.namespace}-fontastic-${notific8Data.settings.icon}`\n      ];\n      return `<i class=\"${classes.join(' ')}\"></i>`;\n    }\n\n    return '';\n  };\n\n  /**\n   * Build the array of classes that need to be attached to the notification\n   * @return array\n   */\n  buildClasses = function() {\n    if (hasIcon()) {\n      return ['has-icon'];\n    }\n\n    return [];\n  };\n\n  /**\n   * Setup the callback for the notification\n   * @return object\n   */\n  iconCallback = function(data) {\n    notific8Data = data;\n    return {\n      classes: buildClasses(),\n      html: buildHtml()\n    };\n  };\n\n  return window.notific8('registerModule', 'icon', 'beforeContent', {\n    icon: false\n  }, iconCallback);\n})(window);\n"]}